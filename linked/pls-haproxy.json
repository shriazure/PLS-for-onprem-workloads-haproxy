{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "existingVnetName": {
            "type": "string",
            "defaultValue": "provider-az-vnet",
            "metadata": {
                "description": "vName of the existing virtual network to deploy the scale set into."
            }
        },
        "existingVnetResourceGroupName": {
            "type": "string",
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Name of the resourceGroup for the existing virtual network to deploy the scale set into."
            }
        },
        "HA_ProxyBackEndIP": {
            "type": "string",
            "defaultValue": "192.168.1.4",
            "metadata": {
                "description": "Set On-premises IP. It defaults to 192.168.1.4 (On-prem IP)"
            }
        },
        "instanceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances (100 or less)."
            },
            "defaultValue": 2,
            "maxValue": 100
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "Standard_B1ms",
            "metadata": {
                "description": "Size for the Virtual Machine."
            }
        },
        "vmssName": {
            "type": "string",
            "defaultValue": "pls-haproxyVMSS",
            "metadata": {
                "description": "Globally unique dns name for the scale set. Must be 3-61 characters in length and globally unique across Azure."
            },
            "maxLength": 61
        }
    },
    "variables": {
        "addressSpacePrefix": "10.0.0.0/24",
        "aznetname": "provider-az-vnet",
        "gatewaySubnetPrefix": "10.0.0.96/27",
        "haproxysubnetname": "haproxy",
        "haproxysubnetprefix": "10.0.0.128/27",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "loadBalancerBackEndName": "HAProxyloadBalancerBackEnd",
        "loadBalancerFrontEndName": "HAProxyloadBalancerFrontEnd",
        "loadBalancerName": "pls-std-ilb",
        "loadBalancerNatPoolName": "loadBalancerNatPool",
        "loadBalancerProbeName": "SSHProbe",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "nsgName": "Provider-default-nsg",
        "plsnatsubnetname": "pls-nat-subnet",
        "plsnatsubnetprefix": "10.0.0.160/28",
        "plssubnetId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), variables ('plsnatsubnetname'))]",
        "privatelinkservicename": "pls-haproxy",
        "subnetId": "[resourceId(parameters('existingVnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVnetName'), variables ('haproxysubnetname'))]",
        "subnetPrefix": "10.0.0.0/27",
        "trustedPrefix": "10.0.0.32/27",
        "untrustedPrefix": "10.0.0.64/27"
    },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "name": "[parameters('vmssName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2017-03-30",
            "dependsOn": [
                "[variables('aznetname')]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]"
            ],
            "sku": {
                "name": "[parameters('vmSku')]",
                "capacity": "[parameters('instanceCount')]"
            },
            "properties": {
                "overprovision": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "18.04-LTS",
                            "version": "latest"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[parameters('vmssName')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPasswordOrKey')]",
                        "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "nic",
                                "properties": {
                                    "primary": true,
                                    "ipConfigurations": [
                                        {
                                            "name": "ipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[variables('subnetId')]"
                                                },
                                                "publicIPAddressConfiguration": {
                                                    "name": "pub1"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/backendAddressPools/', variables('loadBalancerBackEndName'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('loadBalancerName'), '/inboundNatPools/', variables('loadBalancerNatPoolName'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "type": "Microsoft.Compute/virtualMachines/extensions",
                                "name": "[concat(parameters('vmssName'),'-LinuxCustomScriptExtension')]",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "commandToExecute": "[concat('./automate_haproxy.sh',' ',parameters('HA_ProxyBackEndIP'))]",
                                        "fileUris": [
                                            "https://raw.githubusercontent.com/dmauser/Lab/master/PLS-for-onprem-workloads-haproxy/linked/automate_haproxy.sh"
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('aznetname')]",
            "location": "[resourceGroup().location]",
            "comments": "Adding remain Provider Subnets",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressSpacePrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('haproxysubnetname')]",
                        "properties": {
                            "addressPrefix": "[variables('haproxysubnetprefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgId')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('plsnatsubnetname')]",
                        "properties": {
                            "addressPrefix": "[variables('plsnatsubnetprefix')]",
                            "privateLinkServiceNetworkPolicies": "Disabled"
                        }

                    },
                    {
                        "name": "GatewaySubnet",
                        "properties": {
                            "addressPrefix": "[variables('gatewaySubnetPrefix')]"
                        }
                    },
                    {
                        "name": "trusted",
                        "properties": {
                            "addressPrefix": "[variables('trustedPrefix')]"
                        }
                    },
                    {
                        "name": "untrusted",
                        "properties": {
                            "addressPrefix": "[variables('untrustedPrefix')]"
                        }
                    },
                    {
                        "name": "subnet1",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgId')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "name": "[variables('loadBalancerName')]",
            "location": "[resourceGroup().location]",
            "apiVersion": "2020-07-01",
            "dependsOn": [
                "[variables('aznetname')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('loadBalancerFrontEndName')]",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('loadBalancerBackendName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "HAProxyLbRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/', variables('loadBalancerBackendName'))]"
                            },
                            "protocol": "TCP",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/', variables('loadBalancerProbeName'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('loadBalancerProbeName')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[variables('loadBalancerNatPoolName')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIPConfigurations/', variables('loadBalancerFrontEndName'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 50019,
                            "backendPort": 22
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateLinkServices",
            "apiVersion": "2020-06-01",
            "name": "[variables('privatelinkservicename')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
                "[variables('aznetname')]"
            ],
            "properties": {
                "visibility": {
                    "subscriptions": [
                        "*"
                    ]
                },
                "enableProxyProtocol": false,
                "loadBalancerFrontendIpConfigurations": [
                    {
                        "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIpConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
                    }
                ],
                "ipConfigurations": [
                    {
                        "name": "subnet1-1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "privateIPAddressVersion": "IPv4",
                            "subnet": {
                                "id": "[variables('plssubnetId')]"
                            },
                            "primary": false
                        }
                    }
                ]
            }
        }
    ]
}
